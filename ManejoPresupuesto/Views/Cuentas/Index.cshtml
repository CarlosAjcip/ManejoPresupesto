@model IEnumerable<IndiceCuentasVM>
@{
    ViewData["Title"] = "Cuentas";
    string FormaterarBalance(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string ObtenerBalance(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }
}

<h1>Cuentas</h1>
<a asp-action="Crear" class="btn btn-primary mb-3">Crear Nueva Cuenta</a>

<div class="contenedor-totales mb-3">
    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="activo">
            @FormaterarBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Pasivos</strong>
        </div>
        <div class="pasivo">
            @FormaterarBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>

    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
            @FormaterarBalance(Model.Sum(x => x.Balance))
        </div>
    </div>
</div>

<div class="accordion acordeon-cuentas">
    @foreach (var item in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="cabeceraUno">
                @{
                    var id = item.TipoCuenta.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var claseTipoCuenta = ObtenerBalance(item.Balance);
                }

        
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <span>
                            <strong>
                                @item.TipoCuenta
                            </strong>
                        </span>
                        <span class="@claseTipoCuenta">
                            @FormaterarBalance(item.Balance)
                        </span>
                    </span>
                </button>
              </h2>

              <div id="@id" class="accordion-collapse collapse show">
                  <div>
                      <ul class="list-group">
                          @foreach (var cuenta in item.Cuenta)
                        {
                            var claseCuenta = ObtenerBalance(cuenta.Balance);
                            <li class="list-group-item">
                                <span>
                                    <strong>
                                        <a asp-action="Detalle" asp-route-id="@cuenta.Id">
                                            @cuenta.Nombre
                                        </a>
                                       
                                    </strong>
                                    <a asp-action="Editar" asp-route-id="@cuenta.Id" class="btn-primary btn">
                                        <i class="bi-pencil-fill"></i>
                                    </a>
                                    <a asp-action="Borrar" asp-route-id="@cuenta.Id" class="btn-danger btn">
                                        <i class="bi-trash-fill"></i>
                                    </a>
                                </span>
                                <span class="@item">
                                    @FormaterarBalance(cuenta.Balance)
                                </span>

                            </li>
                        }
                      </ul>
                  </div>
              </div>
        </div>
    }
</div>